;; load-pathに追加
(setq load-path (cons "~/.emacs.d/site-lisp" load;;
;; 文字コード
;;
(set-default-coding-systems 'utf-8)

;;
;; 全角スペース
;;
(defface my-face-b-1 '((t (:background "medium aquamarine"))) nil)
(defvar my-face-b-1 'my-face-b-1)
(defadvice font-lock-mode (before my-font-lock-mode ())
  (font-lock-add-keywords
   major-mode
   '(
     ("　" 0 my-face-b-1 append)
     )))
(ad-enable-advice 'font-lock-mode 'before 'my-font-lock-mode)
(ad-activate 'font-lock-mode)
(add-hook 'find-file-hooks '(lambda ()
                              (if font-lock-mode
                                  nil
                                (font-lock-mode t))) t)

;;
;; 括弧対応
;;
(show-paren-mode t)

;;
;; タブをスペースに変換
;;
(setq-default tab-width 8 indent-tabs-mode nil)

;;
;; マウスホイールでスクロール
;;
(defun scroll-down-with-lines ()
  "" (interactive) (scroll-down 3))
(defun scroll-up-with-lines ()
   "" (interactive) (scroll-up 3))
(global-set-key [mouse-4] 'scroll-down-with-lines)
(global-set-key [mouse-5] 'scroll-up-with-lines)

;;
;; スクロールステップ 1 に設定
;;
(setq scroll-step 1)

;;
;; Shiftで選択
;;
;;(pc-selection-mode)

;;
;; 行数と列数を下に表示
;;
(column-number-mode t)
(line-number-mode t)

;;
;; インデント幅は4
;;
(setq c-default-style "bsd")
(setq-default c-basic-offset 4)     ;; 判定対象コードのインデントが
(setq-default indent-tabs-mode nil) ;; 浅いとき (C 系のヘッダファイルにありがち)、
(setq-default tab-width 8)          ;; この 3 つの設定が優先される。

;;
;; enable judge-indent
;;
(when (require 'judge-indent nil t)
  (global-judge-indent-mode t)
     (setq judge-indent-major-modes
             '(c-mode c++-mode python-mode
                              nxml-mode html-helper-mode css-mode js2-mode
                                               sh-mode)))
;;
;; 行番号表示
;;
(global-linum-mode t)

;;
;; M-g でgoto-line
;;
(global-set-key "\M-g" 'goto-line)

;;
;; ソースコードの折りたたみ
;;
;; C coding style
(add-hook 'c-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
;; C++ coding style
(add-hook 'c++-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
;; Java coding style
(add-hook 'java-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
;; Perl coding style
(add-hook 'perl-mode-hook
          '(lambda ()
             (hs-minor-mode 1)))
;; C-@で折りたたむ
(define-key global-map (kbd "C-@") 'hs-toggle-hiding)

;;
;; GNU GLOBAL(gtags)
;;
(autoload 'gtags-mode "gtags" "" t)
(setq gtags-mode-hook
      '(lambda ()
         (local-set-key "\M-t" 'gtags-find-tag)
         (local-set-key "\M-r" 'gtags-find-rtag)
         (local-set-key "\M-s" 'gtags-find-symbol)
         (local-set-key "\C-t" 'gtags-pop-stack)
         ))
(add-hook 'c-mode-common-hook
          '(lambda()
             (gtags-mode 1)
             (gtags-make-complete-list)
             ))

;;
;; auto-complete
;;
(require 'auto-complete)
(require 'auto-complete-config)    ; 必須ではないですが一応
(global-auto-complete-mode t)


;;
;; キーバインドの変更
;;
(define-key global-map (kbd "C-f") 'forward-word)
(define-key global-map (kbd "C-b") 'backward-word)
(define-key global-map (kbd "C-z") 'undo)
